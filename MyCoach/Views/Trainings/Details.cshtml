@model MyCoach.Models.TrainingDetailsViewModel

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>Training</h4>
    <hr />


    @using (Html.BeginForm(
        "Add",
        "Favorites",
        null,
        FormMethod.Post,
        new { enctype = "multipart/form-data" }
        )
    )
    {
        @Html.AntiForgeryToken()
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @class = "form-control", style = "display: none;" } })
                @{
                    if (Model.IsFavorite)
                    {
                        <input type="submit" value="お気に入りに追加" class="btn btn-primary" disabled />
                    }
                    else
                    {
                        <input type="submit" value="お気に入りに追加" class="btn btn-primary" />
                    }
                }
            </div>
        </div>
    }
        <dl class="row">
            <dt class="col-sm-3">
                @Html.DisplayNameFor(model => model.Title)
            </dt>

            <dd class="col-sm-9">
                @Html.DisplayFor(model => model.Title)
            </dd>

            <dt class="col-sm-3">
                @Html.DisplayNameFor(model => model.Purpose)
            </dt>

            <dd class="col-sm-9">
                @Html.DisplayFor(model => model.Purpose)
            </dd>

            <dt class="col-sm-3">
                @Html.DisplayNameFor(model => model.Description)
            </dt>

            <dd class="col-sm-9">
                @Html.DisplayFor(model => model.Description)
            </dd>
            <dt class="col-sm-3">
                @Html.DisplayNameFor(model => model.Tags)
            </dt>
            <dd class="col-sm-9">
                @foreach (var tag in Model.Tags)
                {
                    <input type="button" class="btn btn-primary btn-xs" value="@Html.DisplayFor(modelItem => tag)">
                }
            <dt class="col-sm-3">
                @Html.DisplayNameFor(model => model.AddDateTime)
            </dt>

            <dd class="col-sm-9">
                @Html.DisplayFor(model => model.AddDateTime)
            </dd>

            <dt class="col-sm-3">
                @Html.DisplayNameFor(model => model.UpdateDateTime)
            </dt>

            <dd class="col-sm-9">
                @Html.DisplayFor(model => model.UpdateDateTime)
            </dd>

            <dt class="col-sm-3">
                @Html.DisplayNameFor(model => model.TimeDuration)
            </dt>

            <dd class="col-sm-9">
                @Html.DisplayFor(model => model.TimeDuration)
            </dd>

            <dt class="col-sm-3">
                @Html.DisplayNameFor(model => model.RequiredPersonNumber)
            </dt>

            <dd class="col-sm-9">
                @Html.DisplayFor(model => model.RequiredPersonNumber)
            </dd>

            <dt class="col-sm-3">
                @Html.DisplayNameFor(model => model.RecommendPersonNumber)
            </dt>

            <dd class="col-sm-9">
                @Html.DisplayFor(model => model.RecommendPersonNumber)
            </dd>

            <dt class="col-sm-3">
                @Html.DisplayNameFor(model => model.YoutubeURL)
            </dt>

            <dd class="col-sm-9">
                @{
                    if (Model.GetYoutubeEmbedURL() != string.Empty)
                    {
                <div class="embed-responsive embed-responsive-16by9">
                    @{
                        string youtubeEmbedURL = Model.GetYoutubeEmbedURL();
                    }
                    <iframe class="embed-responsive-item" src="@Html.DisplayFor(model => youtubeEmbedURL)"></iframe>
                </div>
                    }
                }
            </dd>

        </dl>
</div>